<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원가입 -->
	<insert id="create" parameterType="memberVO" >
		insert into member values ( null, #{id}, #{pw}, #{name}, #{tel}, #{nickname}, #{email},
		default, null, null, '정상', #{birth}, #{gender}, now(), default, null)
	</insert>
	
	<!-- 이메일로 검색 -->
	<select id="emailCheck" parameterType="String" resultType="memberVO">
		select * from member where email = #{email}
	</select>
	
	<!-- 아이디로 검색 -->
	<select id="searchOne" parameterType="String" resultType="memberVO">
		select * from member where id = #{id};
	</select>
	
	<!-- 닉네임 중복 검색 -->
	<select id="nickOne" parameterType="String" resultType="memberVO">
		select * from member where nickname = #{nickname};
	</select>
	
	<!-- 닉네임 변경 -->
	<update id="nick"  parameterType="memberVO">
		update member set nickname = #{nickname} where id = #{id}
	</update>
	
	<!-- 비번찾기 -->	
	<select id="findPw" resultType="memberVO">
		select * from member where id = #{id} and email = #{email}
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="leave"  parameterType="memberVO">
		update member set user_level = 2 where id = #{id} and pw = #{pw}
	</update>
	
	<!-- 프로필 업데이트 -->
	<update id="profileImg"  parameterType="memberVO">
		update member set profile_img = #{profileImg} where id = #{id}
	</update>
	
	<!-- 비밀번호 재설정 -->
	<update id="updatePw"  parameterType="memberVO">
		update member set pw = #{pw} where id = #{id}
	</update>
	
	<!-- 구매 확정 업데이트 -->
	<update id="buyerCon"  parameterType="memberVO">
		update tb_order set buyer_confirm = 1, complete_status = 1 where no = #{no}
	</update>
	
	<!-- 회원정보 수정 -->
	<update id="updateuser"  parameterType="memberVO">
		update member set pw = #{pw}, nickname= #{nickname} where id = #{id}
	</update>   
	
	<!-- 로그인 -->
	<select id="login" parameterType="memberVO" resultType="memberVO">
		select * from member where id = #{id} and pw = #{pw}
	</select>
	
	<select id="logincheck" parameterType="String" resultType="memberVO">
		select * from member where id = #{id}
	</select>
	
	<!-- 로그아웃 시간 업데이트 -->
	<update id="logoutTimeUpdate" parameterType="String">
		update member set logout_time = current_timestamp where id = #{id}
	</update>
	
	<!-- 판매목록 -->
	<select id="purchsList" parameterType="String" resultType="orderVO">
		select * from tb_order where buyer_id = #{id}
	</select>
	
	<!-- 구매목록 -->
	<select id="sellList" parameterType="String" resultType="orderVO">
		select * from tb_order where seller_id = #{id}
	</select>
	
	<!-- 찜 목록 -->
	<select id="basketList" parameterType="String" resultType="productlikesVO">
		select * from product_likes where member_id = #{id}
	</select>
	
	<!-- 운송장번호 업데이트 -->
	<update id="trackingNo"  parameterType="orderVO" >
		update tb_order set tracking_no = #{trackingNo}, delivery_com = #{deliveryCom}
		where no = #{no}
	</update>
	
	<!-- 운송장번호 조회 -->
	<select id="trackingNoSearch" parameterType="String" resultType="orderVO">
		select tracking_no 
		from tb_order 
		where transaction_id = #{transactionId}
	</select>
	
	<!-- ALL -->
    <select id="all" resultType="memberVO">
        SELECT *
        FROM member
    </select>
    
    <!-- Paged ALL -->
    <select id="pagedAll" resultType="memberVO" parameterType="adminPageVO">
        SELECT *
        FROM (SELECT ROW_NUMBER() over(ORDER BY no) AS no, id, name, nickname, email, join_date, status
              FROM member m
              WHERE m.user_level = 1) m2
        WHERE m2.no BETWEEN #{start} AND #{end}
    </select>
    
    <!-- 회원 수 -->
    <select id="count" resultType="Integer">
        SELECT count(*) FROM member
    </select>
    
    <!-- 관리자 제외 일반 회원 ALL -->
    <select id="allExceptAdmin" resultType="memberVO">
        SELECT *
        FROM member
        WHERE user_level = 1
    </select>
    
    <!-- 관리자 계정 SELECT -->
    <select id="readAdmin" resultType="memberVO">
        SELECT *
        FROM member
        WHERE user_level = 0
    </select>
    
        <!-- Email 검색으로 PW 변경 -->
    <update id="updatePwByEmail">
        UPDATE member
        SET pw = #{pw}
        WHERE email = #{email}
    </update>
    
    <!-- 관리자 페이지 내 검색창 -->
    <select id="search" parameterType="java.util.Map" resultType="memberVO">
        SELECT *
        FROM member
        WHERE ${searchType} = #{searchIndex}
    </select>
    
    <!-- 정지 회원 검색 -->
    <select id="suspended" resultType="memberVO">
        SELECT *
        FROM member
        WHERE status = '정지'
    </select>

    <!-- 회원의 출금 계좌와 은행 Read -->
    <select id="listBankAccount" parameterType="String" resultType="memberVO">
        SELECT bank, account
        FROM member
        WHERE id = #{id}
    </select>

    <!-- 이번 주 새로 가입한 멤버 -->
    <select id="newMemberThisWeek" resultType="memberVO">
        SELECT *
        FROM member
        WHERE join_date BETWEEN DATE_ADD(NOW(), INTERVAL -1 WEEK ) AND NOW()
    </select>

    <!-- 최근 한달 간 가입한 멤버 -->
    <select id="memberOfPastThirtyDays" resultType="memberVO">
        SELECT *
        FROM member
        WHERE join_date > DATE_SUB(NOW(), INTERVAL 30 DAY)
    </select>

    <!-- 제재 대상 회원 목록 (누적 신고 횟수가 3, 5, 7 이면서 상태가 '정상'인 회원) -->
    <select id="needPenaltyList" resultType="memberVO">
        SELECT *
        FROM member
        WHERE id IN (SELECT member_id
                     FROM report_count
                     WHERE count IN (3, 5, 7))
          AND status = '정상';
    </select>

    <!-- 제재 실행 -->
    <update id="executeSuspension" parameterType="String">
        UPDATE member
        SET status = '정지'
        WHERE id = #{memberId}
    </update>

    <!-- 제재 해제 -->
    <update id="releaseSuspension" parameterType="String">
        UPDATE member
        SET status = '정상'
        WHERE id = #{memberId}
    </update>
</mapper>