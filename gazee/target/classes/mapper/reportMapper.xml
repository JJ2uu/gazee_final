<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="report">
	<!-- 신고글 작성 -->
	<insert id="register" parameterType="reportVO" useGeneratedKeys="true" keyProperty= "reportId">
		insert into report(report_title, report_content, report_writer, report_category, temporary,reportee) 
		values (#{reportTitle}, 
				#{reportContent},
				#{reportWriter},
				#{reportCategory},
				#{temporary},
				#{reportee})
	</insert>
	
	<!-- 신고글 삭제 -->
	<delete id="del"  parameterType="reportVO">
		delete from report where report_id = #{reportId}
	</delete>
	
	<!-- 신고글 수정 -->
	<update id="up"  parameterType="reportVO">
		update report 
		set 
		report_title= #{reportTitle}, report_content=#{reportContent}, report_category=#{reportCategory}, reportee=#{reportee}, `temporary`=1
		where report_id = #{reportId}
	</update>
	
	<!-- 신고글 상세 -->
	<select id="one" parameterType="Integer" resultType="reportVO">
		select * from report
		where report_id =#{reportId}
	</select>
	
	<!-- 신고글 조회수 -->
	<update id="viewUpdate" parameterType="Integer">
		update report set report_view= report_view + 1
		where report_id =#{reportId}
	</update>
	
	<!-- 신고글 전체검색 -->
	<select id="all" resultType="reportVO" parameterType="pageVO">
		select * 
		from (
		select ROW_NUMBER() over(order by report_id desc)as report_no, r.* 
		from report r
		where r.temporary =1) r2 
		where r2.report_no between #{start} and #{end}
	</select>
	
	<!-- 신고글 카테고리별 검색 -->
	<select id="category" parameterType="Map" resultType="reportVO">
		select * from (
		select ROW_NUMBER() over(order by report_id desc)as report_no, r.*
		from report r 
		where r.report_category=#{category1} and r.temporary=1) r2
		where r2.report_no between #{start} and #{end}
	</select>
	
	<!-- 신고글 개수 -->
	<select id="count" resultType="Integer">
		select count(*) from report r
		where r.temporary=1
	</select>
	
	<!-- 신고글 카테고리별 개수 -->
	<select id="countCategory" parameterType="String" resultType="Integer">
		select count(*) from report r
		where r.report_category=#{category1} and r.temporary=1
	</select>
	
	<!-- 신고글 키워드별 검색 -->
	<select id="countSearch" parameterType="String" resultType="Integer">
		select count(*) from report 
		where report_writer = #{search1} and temporary=1
	</select>

	<!-- 신고글 키워드 검색 목록 -->
	<select id="searchAll" resultType="reportVO"  parameterType="Map">
		select * from (
		select ROW_NUMBER() over(order by report_id desc) as report_no, r.*
		from report r
		where r.report_writer = #{search1} and r.temporary=1) r2
		where r2.report_no between #{start} and #{end}
	</select>
	
	<!-- 신고글 임시저장 여부 확인 -->
	<select id="checkTemporaryReport" resultType="reportVO" parameterType="reportVO">
		select * from report where report_Writer= #{reportWriter} and `temporary`= 0
	</select>
	
	<!-- 답변 등록 -->
    <update id="reply" parameterType="reportVO">
        update report
        SET report_reply= #{reportReply}
        WHERE report_id = #{reportId}
    </update>
    
    <!-- 신고글 전체 Read (non페이징) -->
    <select id="nonPagedList" resultType="reportVO">
        select * from report
    </select>
    
    <!-- 답변이 필요한 신고글 불러오기 (non페이징) -->
    <select id="nonPagedNeedReply" resultType="reportVO">
        select *
        from report
        WHERE report_reply IS NULL
    </select>
    
    <!-- 신고글 전체 Read (페이징) -->
    <select id="pagedList" resultType="reportVO" parameterType="adminPageVO">
        SELECT *
        FROM (SELECT ROW_NUMBER() over(ORDER BY report_id) AS paged_report_id, report_id, report_category, report_writer, report_title, report_date
              FROM report r WHERE temporary = 1) r2
        WHERE r2.paged_report_id BETWEEN #{start} AND #{end}
    </select>
    
    <!--  답변이 필요한 신고글 불러오기 (페이징) -->
    <select id="pagedNeedReply" resultType="reportVO" parameterType="adminPageVO">
        SELECT *
        FROM (SELECT ROW_NUMBER() over(ORDER BY report_id) AS paged_report_id, report_id, report_category, report_writer, report_title, report_date
              FROM report r WHERE report_reply IS NULL) r2
        WHERE r2.paged_report_id BETWEEN #{start} AND #{end}
    </select>
    
    <select id="countPagedNeedReply" resultType="Integer">
        SELECT count(*) FROM customer_service WHERE cs_reply IS NULL
    </select>
</mapper>